{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","output","setOutput","pressedEqual","setPressedEqual","useEffect","length","inputString","lastChar","slice","numbers","split","filter","el","operators","replace","percentage","indexOf","splice","operation","char","op","i","parseFloat","a","b","Infinity","isNaN","changeOutput","showResult","e","backspace","deleteAll","className","onKeyDown","includes","key","value","onClick","target","action","id","autoFocus","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b98fd4f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import backspace from './icons/backspace.svg';\nimport './App.css';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [pressedEqual, setPressedEqual] = useState(false);\n\n  useEffect(() => {\n    changeOutput();\n  }, [input]);\n\n\n  function changeOutput() {\n    if (input.length === 0) {\n      return;\n    }\n\n    let inputString = input+'';\n\n    let lastChar = inputString[inputString.length-1];\n\n    if (lastChar === \"+\"\n      || lastChar === \"-\"\n      || lastChar === \"*\"\n      || lastChar === \"/\") {\n      inputString = inputString.slice(0, inputString.length-1);\n    }\n\n    let numbers = inputString.split(/\\+|\\-|\\*|\\/|\\%/g).filter(el => el.length>0);\n    let operators = inputString.replace(/[0-9]|\\./g, \"\").split(\"\");\n\n    let percentage = operators.indexOf(\"%\");\n    while (percentage !== -1) {\n      numbers.splice((percentage), 1, numbers[percentage - 1] / 100 * numbers[percentage]);\n      operators.splice(percentage, 1);\n      percentage = operators.indexOf(\"%\");\n    }\n\n    function operation(char, op) {\n      let i = operators.indexOf(char);\n  \n      while (i !== -1) {\n        numbers.splice(i, 2, op(parseFloat(numbers[i]), parseFloat(numbers[i + 1])));\n        operators.splice(i, 1);\n        i = operators.indexOf(char);\n      }\n    }\n\n    operation(\"/\", (a, b) => a / b);\n    operation(\"*\", (a, b) => a * b);\n    operation(\"-\", (a, b) => a - b);\n    operation(\"+\", (a, b) => a + b);\n\n    if (numbers[0] === Infinity || numbers[0] === -Infinity || isNaN(numbers[0])) {\n      setOutput('Invalid operation');\n    } else {\n      setOutput(numbers[0]);\n    }\n  };\n\n  const showResult = (e) => {\n    setInput(output);\n    setPressedEqual(true);\n  };\n\n  const backspace = () => {\n    if (input === 'Invalid operation') {\n      setInput('');\n      setOutput('');\n    } else {\n      setInput(input => input.slice(0, input.length - 1));\n    }\n  };\n\n  const deleteAll = () => {\n    setInput('');\n    setOutput('');\n  };\n\n  const handleClick = (e) => {\n\n    if (e.target.className.includes('button')) {\n      if (pressedEqual) {\n        setInput(e.target.value);\n        setPressedEqual(false);\n      } else {\n        setInput(value => value + e.target.value);\n      }\n    }\n\n    if (e.target.className.includes('operator')) {\n      if (!input || input === 'Invalid operation') {\n        setInput('0' + e.target.value);\n        setPressedEqual(false);\n      } else {\n        let lastChar = input[input.length-1];\n\n        if (lastChar === \"+\"\n          || lastChar === \"-\"\n          || lastChar === \"*\"\n          || lastChar === \"/\") {\n          setInput(input => input.slice(0, input.length-1) + e.target.value);\n        } else {\n          setInput(value => value + e.target.value);\n          setPressedEqual(false);\n        }\n      }\n    }\n\n    if (e.target.className.includes('equal')) {\n      showResult();\n    }\n\n    if (e.target.className.includes('backspace')) {\n      backspace();\n    }\n\n    if (e.target.className.includes('clear')) {\n      deleteAll();\n    }\n  };\n\n  const pressedKey = (e) => {\n    let numbers = '0123456789.';\n    let operators = '/*-+';\n\n    if (numbers.includes(e.key)) {\n      if (pressedEqual) {\n        setInput(e.key);\n        setPressedEqual(false);\n      } else {\n        setInput(input => input + e.key);\n      }\n    }\n\n    if (operators.includes(e.key)) {\n      if (!input || input === 'Invalid operation') {\n        setInput('0' + e.key);\n        setPressedEqual(false);\n      }\n\n      let lastChar = input[input.length-1];\n\n      if (lastChar === \"+\"\n        || lastChar === \"-\"\n        || lastChar === \"*\"\n        || lastChar === \"/\") {\n          setInput(input => input.slice(0, input.length-1) + e.key);\n      } else {\n          setInput(value => value + e.key);\n          setPressedEqual(false);\n      }\n    }\n\n    if (e.key === 'Enter') {\n      showResult();\n    }\n\n    if (e.key === 'Backspace') {\n      backspace();\n    }\n\n    if (e.key === 'Delete') {\n      deleteAll();\n    }\n  };\n\n  return (\n    <div className=\"App\" onKeyDown={pressedKey}>\n      <h1 className=\"header\">Calculator</h1>\n\n      <div className=\"calculator\" onClick={handleClick}>\n        <form action=\"\" className=\"calculator__form\">\n          <div className=\"calculator__row\">\n            <div className=\"calculator__display\">\n              <div className=\"calculator__input\" id=\"display\">{input}</div>\n              <div className=\"calculator__output\">{output}</div>\n            </div>\n\n          </div>\n          <div className=\"calculator__row\">\n            <button autoFocus type=\"button\" value=\"ac\" className=\"calculator__key calculator__clear\">ac</button>\n            <button type=\"button\" value=\"clear\" className=\"calculator__key calculator__backspace\">C</button>\n            <button type=\"button\" value=\"%\" className=\"calculator__key calculator__operator\">%</button>\n            <button type=\"button\" value=\"/\" className=\"calculator__key calculator__operator\">/</button>\n          </div>\n          <div className=\"calculator__row\">\n            <button type=\"button\" value=\"7\" className=\"calculator__key calculator__button\">7</button>\n            <button type=\"button\" value=\"8\" className=\"calculator__key calculator__button\">8</button>\n            <button type=\"button\" value=\"9\" className=\"calculator__key calculator__button\">9</button>\n            <button type=\"button\" value=\"*\" className=\"calculator__key calculator__operator\">*</button>\n          </div>\n          <div className=\"calculator__row\">\n            <button type=\"button\" value=\"4\" className=\"calculator__key calculator__button\">4</button>\n            <button type=\"button\" value=\"5\" className=\"calculator__key calculator__button\">5</button>\n            <button type=\"button\" value=\"6\" className=\"calculator__key calculator__button\">6</button>\n            <button type=\"button\" value=\"-\" className=\"calculator__key calculator__operator\">-</button>\n          </div>\n          <div className=\"calculator__row\">\n            <button type=\"button\" value=\"1\" className=\"calculator__key calculator__button\">1</button>\n            <button type=\"button\" value=\"2\" className=\"calculator__key calculator__button\">2</button>\n            <button type=\"button\" value=\"3\" className=\"calculator__key calculator__button\">3</button>\n            <button type=\"button\" value=\"+\" className=\"calculator__key calculator__operator\">+</button>\n          </div>\n          <div className=\"calculator__row\">\n            <button type=\"button\" value=\".\" className=\"calculator__key calculator__button\">.</button>\n            <button type=\"button\" value=\"0\" className=\"calculator__key calculator__button\">0</button>\n            <button type=\"button\" value=\"=\" className=\"calculator__key calculator__key--equal\">=</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}